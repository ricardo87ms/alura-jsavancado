{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","res","ok","Error","statusText","url","fetch","then","_handleErrors","json","dado","headers","method","body","JSON","stringify"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+CAAaA,W;;;;;;;sEAEKC,G,EAAK;AACf,oDAAI,CAACA,IAAIC,EAAT,EAAa,MAAM,IAAIC,KAAJ,CAAUF,IAAIG,UAAd,CAAN;AACb,uDAAOH,GAAP;AACH;;;4DAEGI,G,EAAK;AAAA;;AAEL,uDAAOC,MAAMD,GAAN,EACFE,IADE,CACG;AAAA,+DAAO,MAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,iDADH,EAEFM,IAFE,CAEG;AAAA,+DAAON,IAAIQ,IAAJ,EAAP;AAAA,iDAFH,CAAP;;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACH;;;6DAEIJ,G,EAAKK,I,EAAM;AAAA;;AAEZ,uDAAOJ,MAAMD,GAAN,EAAW;AACdM,iEAAS,EAAE,gBAAgB,kBAAlB,EADK;AAEdC,gEAAQ,MAFM;AAGdC,8DAAMC,KAAKC,SAAL,CAAeL,IAAf;AAHQ,iDAAX,EAKFH,IALE,CAKG;AAAA,+DAAO,OAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,iDALH,CAAP;;AAOA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEH","file":"HttpService.js","sourcesContent":["export class HttpService {\r\n\r\n    _handleErrors(res) {\r\n        if (!res.ok) throw new Error(res.statusText);\r\n        return res;\r\n    }\r\n\r\n    get(url) {\r\n\r\n        return fetch(url)\r\n            .then(res => this._handleErrors(res))\r\n            .then(res => res.json());\r\n\r\n        // return new Promise((resolve, reject) => {\r\n\r\n        //     let xhr = new XMLHttpRequest();\r\n        //     xhr.open('GET', url);\r\n        //     xhr.onreadystatechange = () => {\r\n        //         if (xhr.readyState == 4) {\r\n        //             if (xhr.status == 200) {\r\n        //                 resolve(JSON.parse(xhr.responseText));\r\n        //             } else {\r\n        //                 console.log(xhr.responseText);\r\n        //                 reject(xhr.responseText);\r\n        //             }\r\n        //         }\r\n        //     }\r\n\r\n        //     xhr.send();\r\n        // });\r\n    }\r\n\r\n    post(url, dado) {\r\n\r\n        return fetch(url, {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            method: 'post',\r\n            body: JSON.stringify(dado)\r\n        })\r\n            .then(res => this._handleErrors(res));\r\n\r\n        // return new Promise((resolve, reject) => {\r\n\r\n        //     let xhr = new XMLHttpRequest();\r\n        //     xhr.open(\"POST\", url, true);\r\n        //     xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n        //     xhr.onreadystatechange = () => {\r\n\r\n        //         if (xhr.readyState == 4) {\r\n\r\n        //             if (xhr.status == 200) {\r\n\r\n        //                 resolve(JSON.parse(xhr.responseText));\r\n        //             } else {\r\n\r\n        //                 reject(xhr.responseText);\r\n        //             }\r\n        //         }\r\n        //     };\r\n        //     xhr.send(JSON.stringify(dado));\r\n        // });\r\n\r\n    }\r\n}"]}