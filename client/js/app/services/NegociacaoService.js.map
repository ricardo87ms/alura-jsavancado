{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["NegociacaoService","_http","HttpService","Promise","resolve","reject","get","then","negociacoes","map","Negociacao","Date","objeto","data","quantidade","valor","catch","console","log","erro","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","periodos","reduce","dados","periodo","concat","dado","Error","negociacao","ConnectionFactory","getConnection","NegociacaoDao","conexao","dao","adiciona","connection","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","JSON","stringify","negociacaoExistente"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["class NegociacaoService {\r\n\r\n    constructor() {\r\n        this._http = new HttpService();\r\n    }\r\n\r\n    obterNegociacoesDaSemana() {\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            this._http\r\n                .get('negociacoes/semana')\r\n                .then(negociacoes => {\r\n                    resolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)));\r\n                })\r\n                .catch(erro => {\r\n                    console.log(erro);\r\n                    reject('Não foi possível obter as negociações da semana');\r\n                })\r\n        });\r\n    }\r\n\r\n    obterNegociacoesDaSemanaAnterior() {\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            this._http\r\n                .get('negociacoes/anterior')\r\n                .then(negociacoes => {\r\n                    resolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)));\r\n                })\r\n                .catch(erro => {\r\n                    console.log(erro);\r\n                    reject('Não foi possível obter as negociações da semana anterior');\r\n                })\r\n        });\r\n\r\n    }\r\n\r\n    obterNegociacoesDaSemanaRetrasada() {\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            this._http\r\n                .get('negociacoes/retrasada')\r\n                .then(negociacoes => {\r\n                    resolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)));\r\n                })\r\n                .catch(erro => {\r\n                    console.log(erro);\r\n                    reject('Não foi possível obter as negociações da semana retrasada');\r\n                })\r\n        });\r\n\r\n    }\r\n\r\n    obterNegociacoes() {\r\n\r\n        return Promise.all([\r\n            this.obterNegociacoesDaSemana(),\r\n            this.obterNegociacoesDaSemanaAnterior(),\r\n            this.obterNegociacoesDaSemanaRetrasada()\r\n        ]).then(periodos => {\r\n\r\n            let negociacoes = periodos\r\n                .reduce((dados, periodo) => dados.concat(periodo), [])\r\n                .map(dado => new Negociacao(new Date(dado.data), dado.quantidade, dado.valor));\r\n\r\n            return negociacoes;\r\n        }).catch(erro => {\r\n            throw new Error(erro);\r\n        });\r\n    }\r\n\r\n    cadastra(negociacao) {\r\n\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(conexao => new NegociacaoDao(conexao))\r\n            .then(dao => dao.adiciona(negociacao))\r\n            .then(() => 'Negociação cadastrada com sucesso')\r\n            .catch(erro => {\r\n                throw new Error(\"Não foi possível adicionar a negociação\")\r\n            });\r\n    }\r\n\r\n    lista() {\r\n\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.listaTodos())\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível obter as negociações')\r\n            })\r\n    }\r\n\r\n    apaga() {\r\n\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.apagaTodos())\r\n            .then(() => 'Negociações apagadas com sucesso')\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível apagar as negociações')\r\n            });\r\n    }\r\n\r\n    importa(listaAtual) {\r\n\r\n        return this.obterNegociacoes()\r\n            .then(negociacoes =>\r\n                negociacoes.filter(negociacao =>\r\n                    !listaAtual.some(negociacaoExistente =>\r\n                        JSON.stringify(negociacao) == JSON.stringify(negociacaoExistente)))\r\n            )\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error(\"Não foi possível importar as negociações\");\r\n            });\r\n    }\r\n}"]}